function Tag(){this.name="",this.line=-1,this.pos=-1,this.type=null,this.children=[],this.markup=!1,this.parent_=void 0}var types=["root","name","contains","not","end"],Parser={tag_root:void 0,tag_pointer:void 0,re_tag:new RegExp("{{{?#?/?\\^?[\\w|.]+}?}}","g"),init:function(t){void 0===t&&(t=new Tag),this.tag_root=t,this.tag_root.name="root",this.tag_root.type=types[0],this.tag_pointer=this.tag_root,console.log(this.tag_pointer)},examineTag:function(t){t.parent_=this.tag_pointer
var i=t.name.substr(2,t.name.length-4)
i.startsWith("{")&&(i=i.substr(1),t.markup=!0),i.startsWith("#")?(this.tag_pointer.children.push(t),i=i.substr(1),t.type=types[2],this.tag_pointer=t):i.startsWith("^")?(this.tag_pointer.children.push(t),i=i.substr(1),t.type=types[3],this.tag_pointer=t):i.startsWith("/")?(i=i.substr(1),t.type=types[4],t.parent_=this.tag_pointer.parent_,this.tag_pointer=t.parent_,this.tag_pointer.children.push(t)):(t.type=types[1],this.tag_pointer.children.push(t)),t.name=i},parse:function(t){for(var i=t.split("\n"),e=0;e<i.length;e++){var s=i[e]
if(""!==s.trim())for(var n;null!==(n=this.re_tag.exec(s));){var r=new Tag
r.name=n[0],r.line=e,r.pos=n.index,this.examineTag(r)}}}}
